####################################################################
# This playbook configures a webserver to run dreambooth
# It exposes dreambooth via an API endpoint
####################################################################

- name: Deploy dreambooth to a server
  hosts: dreambooth_servers
  become: true
  tasks:

    # Install Dependencies
    - name: Update Cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        state: present
        name: ['git', 'python3', 'ssmtp', 'mutt', 'npm', nginx]

    - name: Create conda directory
      file:
        state: directory
        path: /home/ubuntu/conda
        owner: ubuntu

    - name: Download conda installer script
      command:
        cmd: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        chdir: /home/ubuntu/conda
        warn: false
    
    # - name: Download conda installer script
    #   command:
    #     cmd: wget https://repo.anaconda.com/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh
    #     chdir: conda

    - name: Make miniconda executable
      file:
        path: /home/ubuntu/conda/miniconda.sh
        owner: ubuntu
        mode: +x

    - name: Install miniconda
      command: bash /home/ubuntu/conda/miniconda.sh -b -f -p /home/ubuntu/conda/miniconda

    - name: Add conda commands to path
      shell: 
        cmd: ln /home/ubuntu/conda/miniconda/bin/conda /usr/bin
        warn: false 

    # Clone github repo for dreambooth
    - name: Remove dreambooth github repo
      file:
        path: /home/ubuntu/Dreambooth-Stable-Diffusion
        state: absent

    - name: Clone dreambooth github repo
      command:
        cmd: git clone https://github.com/JoePenna/Dreambooth-Stable-Diffusion
        warn: false

    # Transfer training script
    - name: Transfer training script
      template:
        src: files/beginTraining.sh
        dest: /home/ubuntu/beginTraining.sh

    # Make the script executable
    - name: Make training script executable
      file:
        path: /home/ubuntu/beginTraining.sh
        mode: +x
        owner: ubuntu

    # Configure mailing service
    - name: Set mailing configurations
      ansible.builtin.blockinfile:
        path: "/etc/ssmtp/ssmtp.conf"
        block: |
          #
          #
          UseSTARTTLS=no
          FromLineOverride=YES
          root=ezikegodson@gmail.com
          mailhub=smtp.gmail.com:465
          AuthUser=ezikegodson@gmail.com
          AuthPass=vuzzkqghcgehbmsl
          rewriteDomain=gmail.com
          FromLineOverride=YES
          UseTLS=YES
          #
          #

    # Transfer node server files
    - name: Make training script executable
      file:
        path: /home/ubuntu/node-server
        owner: ubuntu
        state: directory

    - name: Transfer node server package.json template
      template:
        src: files/package.json
        dest: /home/ubuntu/node-server/package.json
    
    - name: Transfer node server template
      template:
        src: files/server.js
        dest: /home/ubuntu/node-server/server.js

    # Setup nginx
    - name: Copy nginx reverse-proxy configuration
      template:
        src:  files/nginx.conf
        dest: /etc/nginx/sites-available/noxus.conf

    - name: Unlink default template
      command: unlink /etc/nginx/sites-enabled/default

    - name: Enable NGINX reverse-proxy configuration
      command:
        cmd: ln -s /etc/nginx/sites-available/noxus.conf /etc/nginx/sites-enabled/noxus.conf
        warn: false

    - name: Restart NGINX
      service:
        name: nginx
        state: reloaded

    - name: Make ubuntu owner of all files in it's directory
      command:
        cmd: chown -R ubuntu:ubuntu /home/ubuntu
